<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>InsertionWindow</class>
 <widget class="QMainWindow" name="InsertionWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>700</width>
    <height>450</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QPushButton" name="closeButton">
    <property name="geometry">
     <rect>
      <x>460</x>
      <y>10</y>
      <width>101</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(246, 97, 81);</string>
    </property>
    <property name="text">
     <string>Close</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_2">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>0</y>
      <width>171</width>
      <height>51</height>
     </rect>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:16pt; font-weight:600;&quot;&gt;INSERTION&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
   </widget>
   <widget class="QTabWidget" name="tabWidget">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>50</y>
      <width>661</width>
      <height>401</height>
     </rect>
    </property>
    <property name="tabPosition">
     <enum>QTabWidget::North</enum>
    </property>
    <property name="tabShape">
     <enum>QTabWidget::Rounded</enum>
    </property>
    <property name="currentIndex">
     <number>0</number>
    </property>
    <property name="usesScrollButtons">
     <bool>false</bool>
    </property>
    <widget class="QWidget" name="tab">
     <attribute name="title">
      <string>Array</string>
     </attribute>
     <widget class="QTextBrowser" name="textBrowser">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>641</width>
        <height>351</height>
       </rect>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Fira Sans Semi-Light'; font-size:10pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;Time Complexity&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt; in worst case of this insertion operation can be linear i.e. O(N) as we might have to shift all of the elements by one place to the right.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;Insert an element K at position, pos in arr[]&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt;: The first step is to check if there is any space left in the array for new element. To do this check,&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:142.857%; background-color:#e0e0e0;&quot;&gt;&lt;span style=&quot; font-family:'Consolas','monospace'; font-size:15px; color:rgba(0,0,0,0.894118); background-color:#e0e0e0;&quot;&gt;if(len &amp;lt; N)&lt;/span&gt;&lt;span style=&quot; font-family:'Consolas','monospace'; font-size:15px; color:rgba(0,0,0,0.894118);&quot;&gt;&lt;br /&gt;     // space left&lt;br /&gt;else&lt;br /&gt;     // array is full&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt;Now, if there is space left, the element can be inserted. The index of the new element will be &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;idx = pos - 1&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt;.&lt;br /&gt;&lt;br /&gt;Now, before inserting the element at the index idx, shift all elements from the index idx till end of the array to the right by 1 place. This can be done as:&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:142.857%; background-color:#e0e0e0;&quot;&gt;&lt;span style=&quot; font-family:'Consolas','monospace'; font-size:15px; color:rgba(0,0,0,0.894118); background-color:#e0e0e0;&quot;&gt;for(i = len-1; i &amp;gt;= idx; i--) &lt;/span&gt;&lt;span style=&quot; font-family:'Consolas','monospace'; font-size:15px; color:rgba(0,0,0,0.894118);&quot;&gt;{&lt;br /&gt;    arr[i+1] = arr[i];&lt;br /&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt;After shifting the elements, place the element K at index idx.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:142.857%; background-color:#e0e0e0;&quot;&gt;&lt;span style=&quot; font-family:'Consolas','monospace'; font-size:15px; color:rgba(0,0,0,0.894118); background-color:#e0e0e0;&quot;&gt;arr[idx] = K;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="tab_2">
     <attribute name="title">
      <string>Binary Tree</string>
     </attribute>
     <widget class="QTextBrowser" name="textBrowser_2">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>641</width>
        <height>351</height>
       </rect>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Fira Sans Semi-Light'; font-size:10pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:12pt; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;Time Complexity&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:12pt; color:rgba(0,0,0,0.839216);&quot;&gt; in worst case of this insertion operation can be linear i.e. O(N).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216);&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;Problem&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;: Given a &lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;Binary Tree&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt; and a &lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-weight:696; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;Key&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;. The task is to insert the &lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; font-style:italic; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;key&lt;/span&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt; into the binary tree at first position available in level order. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216);&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;1. The idea is to do iterative level order traversal of the given tree using a queue. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;2. If we find a node whose left child is empty, we make new key as the left child of the node. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;3. Else if we find a node whose right child is empty, we make new key as the right child of that node. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'Nunito','sans-serif'; font-size:16px; color:rgba(0,0,0,0.839216); background-color:#ffffff;&quot;&gt;4. We keep traversing the tree until we find a node whose either left or right child is empty.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QPushButton" name="startButton">
    <property name="geometry">
     <rect>
      <x>580</x>
      <y>10</y>
      <width>101</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(143, 240, 164);</string>
    </property>
    <property name="text">
     <string>Start</string>
    </property>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
